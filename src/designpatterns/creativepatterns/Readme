创建型设计模式共有五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式

一.工厂方法模式：
        1.简单工厂模式:
        工厂设计模式，顾名思义就是生产对象的。如果创建对象的时候，直接用new创建对象，那么对象和对象之间就产生了耦合。这违背了软件设计的开闭原则。
    如果我们使用工厂来生产对象，我们就只和工厂打交道，彻底和对象解耦。
        简单工厂模式：
        ① 抽象产品   ② 具体产品  ③ 具体工厂   ④产品使用者

        2.工厂方法模式：
        工厂方法模式将工厂提取成一个接口或者一个抽象类，具体生产什么产品由子类决定。
        角色：
        ① 抽象产品   ② 具体产品  ③ 抽象工厂   ④ 具体工厂  ⑤ 产品使用者

        3.抽象工厂方法：
        工厂方法模式存在一个弊端，那就是一个具体工厂只能创建一类产品。如果产品种类过多，那么将产生大量的工厂。

二、建造者模式：



三、原型模式：



四、单例模式：
        单例模式是一种常用的设计模式，其定义是单例对象的类只能允许一个实例存在。许多时候整个系统中只需要有一个全局对象，这样有利于我们协调系统整体的行为。
        1.饿汉式(静态常量)
        2.饿汉式(静态代码块)
        3.双重检查加锁
        4.静态内部类

        1、2  利用了jvm的类加载机制，当类在第一次被加载的时候便创建了单例对象，避免了线程同步的问题。缺点是没有达到懒加载的效果。如果从始至终都没有使用过这个单例对象，那么将造成内存浪费。
        3 利用了锁机制
        4.